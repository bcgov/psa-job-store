name: Database In-Place PITR
on:
  push:
    branches:
      - develop
    paths:
      - 'deployments/openshift/kustomize/**'

jobs:
  restore:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment:
      name: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'test' || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "NAMESPACE=f3c07a-dev" >> $GITHUB_ENV
          echo "RESTORE_TIMESTAMP=2024-11-11 08:00:00 PST" >> $GITHUB_ENV
          echo "CLUSTER_NAME=api-postgres-beta" >> $GITHUB_ENV

      - name: Login to OpenShift
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} \
            --token=${{ secrets.OPENSHIFT_API_TOKEN }} \
            --insecure-skip-tls-verify=true
          oc project ${{ env.NAMESPACE }}

      - name: Update cluster names
        run: |
          # Update base postgrescluster.yml name
          sed -i "s/name: .*/name: ${{ env.CLUSTER_NAME }}/" \
            deployments/openshift/kustomize/base/crunchy/postgrescluster.yml
          
          # Create patch with matching name and restore configuration
          cat << EOF > deployments/openshift/kustomize/overlays/crunchy/dev/patch.yml
          apiVersion: postgres-operator.crunchydata.com/v1beta1
          kind: PostgresCluster
          metadata:
            name: ${{ env.CLUSTER_NAME }}
          spec:
            backups:
              pgbackrest:
                restore:
                  enabled: true
                  repoName: repo1
                  options:
                    - --type=time
                    - --target="${{ env.RESTORE_TIMESTAMP }}"
          EOF

      - name: Apply restore configuration
        run: |
          oc apply -k deployments/openshift/kustomize/overlays/crunchy/dev \
            -n ${{ env.NAMESPACE }}

      - name: Wait for restore completion
        run: |
          oc wait --for=condition=Ready \
            postgrescluster/${{ env.CLUSTER_NAME }} \
            -n ${{ env.NAMESPACE }} --timeout=30m

      - name: Verify database status
        run: |
          DB_POD=$(oc get pod -l postgres-operator.crunchydata.com/role=master \
            -n ${{ env.NAMESPACE }} \
            -l postgres-operator.crunchydata.com/cluster=${{ env.CLUSTER_NAME }} \
            -o jsonpath="{.items[0].metadata.name}")
          echo "Database pod: $DB_POD"
          oc logs $DB_POD -n ${{ env.NAMESPACE }} --tail=100

      - name: Disable restore mode
        run: |
          cat << EOF > deployments/openshift/kustomize/overlays/crunchy/dev/patch.yml
          apiVersion: postgres-operator.crunchydata.com/v1beta1
          kind: PostgresCluster
          metadata:
            name: ${{ env.CLUSTER_NAME }}
          spec:
            backups:
              pgbackrest:
                restore:
                  enabled: false
          EOF
          oc apply -k deployments/openshift/kustomize/overlays/crunchy/dev \
            -n ${{ env.NAMESPACE }}

# TO CONVERT TO MANUAL TRIGGER LATER:
# 1. Comment out the current 'on.push' section
# 2. Add workflow_dispatch with inputs:
#    workflow_dispatch:
#      inputs:
#        restore_timestamp:
#          description: 'Restore point timestamp (YYYY-MM-DD HH:MM:SS TZ)'
#          required: true
#        environment:
#          description: 'Environment to restore in'
#          required: true
#          default: 'dev'
#        cluster_name:
#          description: 'PostgreSQL cluster name'
#          required: true
#          default: 'api-postgres-alpha'
# 3. Remove the 'if: github.ref == 'refs/heads/develop'' condition
# 4. Update environment variables section to:
#    echo "NAMESPACE=${{ github.ref_name == 'main' && 'f3c07a-prod' || 
#          github.ref_name == 'stage' && 'f3c07a-test' || 'f3c07a-dev' }}" >> $GITHUB_ENV
#    echo "RESTORE_TIMESTAMP=${{ github.event.inputs.restore_timestamp }}" >> $GITHUB_ENV
#    echo "CLUSTER_NAME=${{ github.event.inputs.cluster_name }}" >> $GITHUB_ENV