name: Migrate DB Schema
on:
  repository_dispatch:
    types: [migrate-trigger]

jobs:
  metadata:
    name: Get Metadata
    runs-on: ubuntu-20.04
    outputs:
      changed-apps: ${{ steps.get-changed-apps.outputs.changes }}
      needs-migration: ${{ steps.get-migrations.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Get Changed Apps
        id: get-changed-apps
        uses: dorny/paths-filter@v2
        with:
          base: ${{ github.event.client_payload.ref }}
          ref: ${{ github.event.client_payload.ref }}
          filters: |
            api:
              - 'apps/api/**'
            app:
              - 'apps/app/**'
      - name: Get Migrations
        id: get-migrations
        uses: dorny/paths-filter@v2
        with:
          base: ${{ github.event.client_payload.ref }}
          ref: ${{ github.event.client_payload.ref }}
          filters: |
            migration:
              - 'apps/api/prisma/migrations/**'
  migrate:
    name: Migrate DB Schema
    needs: metadata
    if: ${{ contains(needs.metadata.outputs.needs-migration, 'migration') }}
    runs-on: ubuntu-20.04
    environment:
      name: ${{ github.event.client_payload.ref_name == 'main' && 'prod' || github.event.client_payload.ref_name == 'stage' && 'test' || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: 'migrate db'
        uses: ./.github/actions/migrate-db
        with:
          environment: ${{ github.event.client_payload.ref_name == 'main' && 'prod' || github.event.client_payload.ref_name == 'stage' && 'test' || 'dev' }}
          openshift-server: ${{ secrets.OPENSHIFT_SERVER }}
          api-token: ${{ secrets.OPENSHIFT_API_TOKEN }}
      - name: Create Version Changeset
        run: npm install @changesets/cli && npx changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      - name: Commit Version
        if: ${{ github.event.client_payload.ref_name == 'stage' }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update version [skip ci]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: Deploy
    needs: metadata
    if: ${{needs.metadata.outputs.changed-apps != '[]' && needs.metadata.outputs.changed-apps != ''}}
    runs-on: ubuntu-20.04
    environment:
      name: ${{ github.event.client_payload.ref_name == 'main' && 'prod' || github.event.client_payload.ref_name == 'stage' && 'test' || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Trigger Deployments
        uses: ./.github/actions/trigger-deploy
        with:
          openshift-server: ${{ secrets.OPENSHIFT_SERVER }}
          api-token: ${{ secrets.OPENSHIFT_API_TOKEN }}
          project: ${{ needs.metadata.outputs.changed-apps }}
          environment: ${{ github.event.client_payload.ref_name == 'main' && 'prod' || github.event.client_payload.ref_name == 'stage' && 'test' || 'dev' }}
