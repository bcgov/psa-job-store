name: Migrate DB Schema
on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'Commit SHA'
        required: true

jobs:
  metadata:
    name: Get Metadata
    runs-on: ubuntu-20.04
    environment: dev

    outputs:
      changed-apps: ${{ steps.get-changed-apps.outputs.changes }}
    steps:
      - name: Debug Info
        run: |
          echo "Ref: ${{ github.ref }}"
          echo "Ref Name: ${{ github.ref_name }}"
          echo "SHA: ${{ inputs.sha }}"
          echo "Full Ref: ${{ github.ref }}"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Get Changed Apps
        id: get-changed-apps
        uses: dorny/paths-filter@v2
        with:
          base: ${{ github.ref }}
          ref: ${{ github.ref }}
          filters: |
            api:
              - 'apps/api/prisma/migrations/**'
  migrate:
    name: Migrate DB Schema
    needs: metadata
    if: ${{ needs.metadata.outputs.changed-apps != '[]' && needs.metadata.outputs.changed-apps != '' }}
    runs-on: ubuntu-20.04
    environment:
      name: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'test' || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: 'migrate db'
        uses: ./.github/actions/migrate-db
        with:
          environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'test' || 'dev' }}
          openshift-server: ${{ secrets.OPENSHIFT_SERVER }}
          api-token: ${{ secrets.OPENSHIFT_API_TOKEN }}
      - name: Create Version Changeset
        run: npm install @changesets/cli && npx changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit Version
        if: ${{ github.ref_name == 'stage' }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update version [skip ci]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Trigger Deployments
        uses: ./.github/actions/trigger-deploy
        with:
          openshift-server: ${{ secrets.OPENSHIFT_SERVER }}
          api-token: ${{ secrets.OPENSHIFT_API_TOKEN }}
          project: ${{ needs.metadata.outputs.changed-apps }}
          environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'test' || 'dev' }}
      - name: Debug E2E Trigger Conditions
        run: |
          echo "Previous step success: ${{ success() }}"
          echo "Branch name: ${{ github.ref_name }}"
          echo "Should trigger: ${{ success() && github.ref_name == 'dev' }}"
      - name: Trigger E2E Tests
        if: ${{ success() }} && github.ref_name == 'dev'
        uses: actions/github-script@v6
        with:
          script: |
            try {
              console.log('Attempting to trigger E2E tests');
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'e2e.yml',
                ref: '${{ github.ref }}'
              });
              console.log('E2E tests triggered successfully');
            } catch (error) {
              console.log('Error triggering E2E tests:', error);
              throw error;
            }