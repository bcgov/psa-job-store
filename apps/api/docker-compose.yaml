version: '3.8'

services:
  nestjs-app:
    env_file:
      - .env.docker
    build:
      context: ../../
      dockerfile: apps/api/Dockerfile.dev
      args:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - DATABASE_URL=${DATABASE_URL}
        - KEYCLOAK_REALM_URL=${KEYCLOAK_REALM_URL}
        - KEYCLOAK_CLIENT_ID_PRIVATE=${KEYCLOAK_CLIENT_ID_PRIVATE}
        - KEYCLOAK_CLIENT_ID_PUBLIC=${KEYCLOAK_CLIENT_ID_PUBLIC}
        - KEYCLOAK_REDIRECT_URL=${KEYCLOAK_REDIRECT_URL}
        - BI_URL=${BI_URL}
        - BI_USERNAME=${BI_USERNAME}
        - BI_PASSWORD=${BI_PASSWORD}
        - ELASTIC_NODE=${ELASTIC_NODE}
        - ELASTIC_USERNAME=${ELASTIC_USERNAME}
        - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
        - PEOPLESOFT_URL=${PEOPLESOFT_URL}
        - PEOPLESOFT_USERNAME=${PEOPLESOFT_USERNAME}
        - PEOPLESOFT_PASSWORD=${PEOPLESOFT_PASSWORD}
        - CRM_APPLICATION_CONTEXT=${CRM_APPLICATION_CONTEXT}
        - CRM_PASSWORD=${CRM_PASSWORD}
        - CRM_URL=${CRM_URL}
        - CRM_USERNAME=${CRM_USERNAME}
    ports:
      - 4000:4000
    networks:
      elastic:
    depends_on:
      - postgres
    volumes:
      - ./src:/usr/src/apps/api/src
      - api-nodemodules:/node_modules
      - ./prisma:/usr/src/apps/api/prisma
  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    networks:
      elastic:
    env_file:
      - .env.docker
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    # 8.x
    environment:
      [
        'ELASTIC_PASSWORD=${ELASTIC_PASSWORD}',
        'CLI_JAVA_OPTS=-Xms2g -Xmx2g',
        'bootstrap.memory_lock=true',
        'discovery.type=single-node',
        'xpack.security.enabled=false',
        'xpack.security.enrollment.enabled=false',
      ]
    ports:
      - 9200:9200
    networks:
      - elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '2.0'
        reservations:
          cpus: '1.0'
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
    ports:
      - 5601:5601
    networks:
      - elastic
    deploy:
      resources:
        limits:
          cpus: '2.0'
        reservations:
          cpus: '1.0'
  nginx_rp: #optional, not required for running in dockre. this image must be built seperately
    env_file:
      - .env
    build:
      context: ../../deployments/builds/nginx_rp/
      args:
        - DISCOVERY=${KEYCLOAK_REALM_URL}
        - CLIENT_ID=${KEYCLOAK_CLIENT_ID_PRIVATE}
        - CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
        - REFRESH_SESSION_INTERVAL=${REFRESH_SESSION_INTERVAL}
        - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN}
    container_name: nginx_rp
    ports:
      - '8081:8081'
    networks:
      elastic:
networks:
  elastic:
volumes:
  api-nodemodules:
