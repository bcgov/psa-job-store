server {
    listen 8081;
    resolver 8.8.8.8 valid=30s;  # DNS resolver
    lua_ssl_verify_depth 2;
    lua_ssl_trusted_certificate /etc/ssl/cert.pem;
    error_log /dev/stderr debug;
    location / {
        # Perform authentication check
        access_by_lua_block {
            local oidc = require("resty.openidc")
            local opts = {
                discovery = "https://dev.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration",
                discovery_cache_ignore = false, -- Use the cache
                session_opts = {
                    name = "sess", -- Name of the session cookie
                    storage = "shm", -- Store session data in shared memory
                    shm_store = "discovery_cache", -- Name of the shared dictionary for caching
                    shm_set_tries = 3 -- Number of tries to set data in shared memory
                },
                client_id = "psa-job-store-api-5124",
                client_secret = "",
                redirect_uri = "/callback",
                keepalive = true,
                refresh_session_interval = 20,
                access_token_expires_leeway = 10,
                session_contents = {id_token=true},
                renew_access_token_on_expiry = true,
            }

            local res, err = oidc.authenticate(opts)
            if err then
                ngx.status = 403
                ngx.say("Access denied: ", err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        # Proxy pass to your application if authenticated
        proxy_pass http://kibana:5601;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location for handling the OIDC redirect_uri
    location = /callback {
        access_by_lua_block {
            -- Lua code to handle OIDC callback
            local oidc = require("resty.openidc")
            local opts = {
                discovery = "https://dev.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration",
                client_id = "psa-job-store-api-5124",
                client_secret = "",
                redirect_uri = "/callback",
                keepalive = true,
                refresh_session_interval = 20,
                access_token_expires_leeway = 10,
                session_contents = {id_token=true},
                renew_access_token_on_expiry = true,
            }
            local res, err = oidc.authenticate(opts)
            if err then
                ngx.say("Authentication failed: ", err)
                ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end
        }
        # proxy_pass http://kibana:5601;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }
}
